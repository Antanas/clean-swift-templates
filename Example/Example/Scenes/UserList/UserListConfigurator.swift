//
//  UserListConfigurator.swift
//  Example
//
//  Created by Miguel Berrocal GÃ³mez on 14/04/16.
//  Copyright (c) 2016 HELM S.C.P. All rights reserved.
//
//  This file was generated by the Clean Swift HELM Xcode Templates
//

import UIKit

// MARK: Connect View, Interactor, and Presenter


extension UserListInteractor: UserListViewControllerOutput, UserListRouterDataSource, UserListRouterDataDestination {
}

extension UserListPresenter: UserListInteractorOutput {
}

class UserListConfigurator {
    // MARK: Object lifecycle
    
    class var sharedInstance: UserListConfigurator {
        struct Static {
            static var instance: UserListConfigurator?
            static var token: dispatch_once_t = 0
        }
        
        dispatch_once(&Static.token) {
            Static.instance = UserListConfigurator()
        }
        
        return Static.instance!
    }
    
    // MARK: Configuration
    
    func configure(viewController: UserListViewController) {
        
        let presenter = UserListPresenter()
        presenter.output = viewController
        
        let interactor = UserListInteractor()
        interactor.output = presenter
        
        let router = UserListRouter(viewController:viewController, dataSource:interactor, dataDestination:interactor)
        
        viewController.output = interactor
        viewController.router = router
    }
}
