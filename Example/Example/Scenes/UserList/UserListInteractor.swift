//
//  UserListInteractor.swift
//  Example
//
//  Created by Miguel Berrocal GÃ³mez on 14/04/16.
//  Copyright (c) 2016 HELM S.C.P. All rights reserved.
//
//  This file was generated by the Clean Swift HELM Xcode Templates
//

import UIKit

protocol UserListInteractorInput {
    func getUser(request:UserList.GetUser.Request)
    func selectUser(request:UserList.SelectUser.Request)
}

protocol UserListInteractorOutput {
    func presentUser(response:UserList.GetUser.Response)
}

protocol UserListDataSource {
    var selectedUser:User! { get }
}

protocol UserListDataDestination {
    
}

class UserListInteractor: UserListInteractorInput, UserListDataSource, UserListDataDestination {
    
    var output: UserListInteractorOutput!
    var selectedUser:User!
    private var users:[User] = []
    
    // MARK: Business logic
    func getUser(request: UserList.GetUser.Request) {
        let store = UserAPIStore()
        let worker = UserStoreWorker(store: store)
        worker.getUser { (result) in
            self.handleGetUserResult(result)
        }
    }
    
    private func handleGetUserResult(result:UserStoreResult<User>) {
        switch result {
        case .Success(let user):
            users.insert(user, atIndex: 0)
            let response = UserList.GetUser.Response(user: user)
            output.presentUser(response)
        case .Failure(let error):
            print(error)
        }

    }
    
    func selectUser(request:UserList.SelectUser.Request) {
        selectedUser = users[request.index]
    }
        

}
