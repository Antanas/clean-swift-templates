//
//  UserDetailViewController.swift
//  Example
//
//  Created by Miguel Berrocal GÃ³mez on 14/04/16.
//  Copyright (c) 2016 HELM S.C.P. All rights reserved.
//
//  This file was generated by the Clean Swift HELM Xcode Templates
//

import UIKit

protocol UserDetailViewControllerInput {
    func displayUser(viewModel:UserDetail.GetUser.ViewModel)
}

protocol UserDetailViewControllerOutput {
    func getUser(request:UserDetail.GetUser.Request)
}

class UserDetailViewController: UIViewController, UserDetailViewControllerInput {
    
    var output: UserDetailViewControllerOutput!
    var router: UserDetailRouter!
    
    private var user:UserDetail.GetUser.ViewModel.User? {
        didSet {
            if let unwrappedUser = user {
                
                attributes = unwrappedUser.attributes
                
                if let URL = NSURL(string: unwrappedUser.imageURLString) {
                    userImageView.kf_setImageWithURL(URL)
                }
            }
        }
    }
    var attributes:[UserDetail.ViewModel.Attribute] = []
    
    struct cellIdentifiers {
        static let userAttributeCell = "userAttributeCell"
    }
    
    @IBOutlet weak var userImageView: UIImageView!
    @IBOutlet weak var userAttributesTableView: UITableView!
    // MARK: Object lifecycle
    
    override func awakeFromNib() {
        super.awakeFromNib()
        UserDetailConfigurator.sharedInstance.configure(self)
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        configureTableViewOnLoad()
        getUserOnLoad()
    }
    
    // MARK: Event handling
    
    func getUserOnLoad() {
        let request = UserDetail.GetUser.Request()
        output.getUser(request)
    }
    
    func configureTableViewOnLoad() {
        userAttributesTableView.registerNib(UINib(nibName: "UserAttributeTableViewCell", bundle: NSBundle.mainBundle()), forCellReuseIdentifier: cellIdentifiers.userAttributeCell)
    }
    // MARK: Display logic
    func displayUser(viewModel:UserDetail.GetUser.ViewModel) {
        user = viewModel.user
        userAttributesTableView.reloadSections(NSIndexSet(index: 0), withRowAnimation: .Automatic)
    }
}


//This should be on configurator but for some reason storyboard doesn't detect ViewController's name if placed there
extension UserDetailViewController: UserDetailPresenterOutput {
    override func prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?) {
        router.passDataToNextScene(segue)
    }
}